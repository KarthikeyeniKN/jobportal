package com.chainsys.jobportal.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import com.chainsys.jobportal.model.AddVaccancy;
import com.chainsys.jobportal.util.ConnectionUtil;

public class ViewNotificationDAO {

	public ArrayList<AddVaccancy> findSavedJob(int userId) throws Exception {
		AddVaccancy savedJob = null;
		//System.out.println(userId);
		ArrayList<AddVaccancy> savedJobList = new ArrayList<>();
		try {
			java.sql.Connection connection = ConnectionUtil.getConnection();
			String sql1 = "select r.company_name as company_name, r.vaccancy_position as vaccancy_position,r.skill_required as skill_required,\r\n" + 
					"r.location as location,r.criteria as criteria,r.perks as perks\r\n" + 
					"from trn_user_jobinfo j join trn_users u on u.user_id = j.user_id \r\n" + 
					"join  trn_recruiters r on r.recruiters_id = j.company_id where j.user_id=? and j.save_job=1;";
			PreparedStatement preparedStatement = connection
					.prepareStatement(sql1);
			preparedStatement.setInt(1, userId);
			ResultSet resultSet = preparedStatement.executeQuery();
			while (resultSet.next()) {
				savedJob = new AddVaccancy();
				savedJob.setCompany_name(resultSet.getString("company_name"));
			    savedJob.setVaccancy_position(resultSet.getString("vaccancy_position"));
				savedJob.setSkill_required(resultSet.getString("skill_required"));
				savedJob.setLocation(resultSet.getString("location"));
				savedJob.setCriteria(resultSet.getString("criteria"));
				savedJob.setPerks(resultSet.getString("perks"));
				savedJobList.add(savedJob);
			}
			ConnectionUtil.close(connection, preparedStatement, resultSet);
		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception("unable findAll");
		}
		return null;
	}


}
